version: 2.1

executors:
    node:
        working_directory: ~/workdir
        docker:
            - image: cimg/node:16.14

commands:
    deploy-dev:
        description: 'Deploy dev test'
        steps:
            - run:
                  name: Generate access to @entur-private packages
                  command: |
                      ENTUR_PRIVATE_PATH="//entur2.jfrog.io/entur2/api/npm/partner-npm-local/"
                      ENTUR_PRIVATE_CREDS="_authToken=$ENTUR_PRIVATE_AUTH_TOKEN"

                      echo "@entur-private:registry=https:$ENTUR_PRIVATE_PATH" > .npmrc
                      echo "$ENTUR_PRIVATE_PATH:$ENTUR_PRIVATE_CREDS" >> .npmrc
            - run: sudo npm install --global npm@8.12.0
            - run: npm ci

jobs:
    build:
        executor: node
        steps:
            - checkout
            - run: sudo npm install --global npm@8.3.0

            - run: npm ci
            - run: npm run ts
            - run: npm run lint
            #- run: npm run build:generate-types

            - run: npm test
            - run: npm run unused-exports

            - persist_to_workspace:
                  root: .
                  paths:
                      - .

    deploy:
        executor: node
        parameters:
            env:
                type: enum
                enum: ['dev', 'staging', 'beta', 'prod']
            function:
                type: string
                default: ''
        docker:
            - image: google/cloud-sdk
        steps:
            - attach_workspace:
                  at: .
            - run: ls -la
            - run: pwd
            - run:
                  name: Set gcloud Auth
                  command: |
                      echo $GCLOUD_SERVICE_KEY_<< parameters.env >> | gcloud auth activate-service-account --key-file=-
            - run:
                  name: Set gcloud project
                  command: |
                      gcloud --quiet config set project entur-<< parameters.env >>
              #    name: Deploy to Google App Engine
              #   command: |
              #      gcloud app deploy ./app-<< parameters.env >>.yaml cron.yaml --quiet --verbosity=debug
            # - run:

workflows:
    build-and-test:
        jobs:
            - build
    deployment:
        jobs:
            - build

            - approval-dev:
                  type: approval
                  requires:
                      - build

            - deploy:
                  env: 'dev'
                  name: dev
                  requires:
                      - approval-dev
