version: 2.1

executors:
    node:
        working_directory: ~/workdir
        docker:
            - image: cimg/node:16.14

jobs:
    build:
        executor: node
        steps:
            - checkout
            - run: sudo npm install --global npm@8.3.0

            - run: npm ci
            - run: npm run ts
            - run: npm run lint
            - run: tsc -p tsconfig.json --declaration --declarationDir "typeDeclarations"
            - run: tar -czf "typeDeclarations.tar.gz" typeDeclarations/

            - run: npm test
            - run: npm run unused-exports

            - persist_to_workspace:
                  root: .
                  paths:
                      - .

    deploy:
        executor: node
        parameters:
            env:
                type: enum
                enum: ['dev', 'staging', 'beta', 'prod']
            function:
                type: string
                default: ''
        docker:
            - image: google/cloud-sdk
        steps:
            - attach_workspace:
                  at: .
            - run: ls -la
            # - run:
            #       name: Set gcloud Auth
            #       command: |
            #           echo $GCLOUD_SERVICE_KEY_<< parameters.env >> | gcloud auth activate-service-account --key-file=-
            # - run:
            #       name: Set gcloud project
            #       command: |
            #           gcloud --quiet config set project entur-<< parameters.env >>
            # - run:
            #       name: Upload type defs to GCP bucket
            #       command: |
            #           gsutil cp typeDeclarations.tar.gz "gs://entur-<< parameters.env >>-bff-search-types/"
            # - run:
            #       name: Deploy to Google App Engine
            #       command: |
            #           gcloud app deploy ./app-<< parameters.env >>.yaml cron.yaml --quiet --verbosity=info

workflows:
    build-and-test:
        jobs:
            - build
    deployment:
        jobs:
            - build

            - approval-dev:
                  type: approval
                  requires:
                      - build

            - deploy:
                  env: 'dev'
                  name: dev
                  requires:
                      - approval-dev
